#@ load("@ytt:data", "data")
---
profile: view
ceip_policy_disclosed: true # Installation fails if this is set to 'false'

shared:
  ingress_domain: #@ data.values.ingress.domain

tap_gui:
  ingressEnabled: true
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer
  tls:
    secretName: #@ data.values.ingress.contour_tls_secret
    namespace: #@ data.values.ingress.contour_tls_namespace
  app_config:
    proxy:
      /metadata-store:
        target: https://metadata-store-app.metadata-store:8443/api/v1
        changeOrigin: true
        secure: false
        headers:
          Authorization: #@ data.values.backstage.authtoken
          X-Custom-Source: project-star
    organization:
      name: odedia
    supplyChain:
      enablePlugin: true
    app:
      title: Odedia's portal
    integrations:
      github:
      - host: github.com
        token: #@ "{}".format(data.values.backstage.github_token)
    catalog:
      locations:
        - type: url
          target: https://github.com/odedia/backstage/blob/main/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/yelb/blob/main/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/todo-ui/blob/main/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/todo-service/blob/main/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/todo-service/blob/main/catalog/system.yaml
        - type: url
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-cart/catalog/system.yaml
        - type: url
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-cart/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-catalog/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-identity/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-order/catalog/catalog-info.yaml
        - type: url                  
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-payment/catalog/catalog-info.yaml
        - type: url                  
          target: https://github.com/odedia/acme-fitness-store/blob/main/apps/acme-shopping/catalog/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/tanzu-java-web-app/blob/main/catalog/catalog-info.yaml
    auth:
      allowGuestAccess: true
      environment: development
      session:
        secret: odedias
      providers:
        oidc:
          development:
            metadataUrl: #@ "{}".format(data.values.backstage.openid.url)
            clientId: #@ "{}".format(data.values.backstage.openid.client_id)
            clientSecret: #@ "{}".format(data.values.backstage.openid.client_secret)
            prompt: auto
    techdocs:
      builder: 'external'
      generator:
        runIn: 'docker'
      publisher:
        type: 'awsS3'
        awsS3:
          bucketName: #@ "{}".format(data.values.backstage.s3.bucket)
          credentials:
            accessKeyId: #@ "{}".format(data.values.aws.region)
            secretAccessKey: #@ "{}".format(data.values.backstage.s3.accessKey)
          region: #@ "{}".format(data.values.backstage.s3.secretKey)
          s3ForcePathStyle: false
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - url: #@ "{}".format(data.values.runclusters.iterate.url)
              name: iterate-cluster
              authProvider: serviceAccount
              serviceAccountToken: #@ "{}".format(data.values.runclusters.iterate.token)
              skipTLSVerify: true
            - url: #@ "{}".format(data.values.runclusters.build.url)
              name: build-cluster
              authProvider: serviceAccount
              serviceAccountToken: #@ "{}".format(data.values.runclusters.build.token)
              skipTLSVerify: true
            - url: #@ "{}".format(data.values.runclusters.test.url)
              name: test-cluster
              authProvider: serviceAccount
              serviceAccountToken: #@ "{}".format(data.values.runclusters.test.token)
              skipTLSVerify: true
            # - url: #@ "{}".format(data.values.runclusters.prod.url)
            #   name: prod-cluster
            #   authProvider: serviceAccount
            #   serviceAccountToken: #@ "{}".format(data.values.runclusters.prod.token)
            #   skipTLSVerify: true
metadata_store:
  app_service_type: ClusterIP # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don't support LoadBalancer
  ingress_enabled: "true"
  ingress_domain: #@ data.values.ingress.domain

contour:
  envoy:
    service:
      annotations:      
        external-dns.alpha.kubernetes.io/hostname: #@ "*.{}".format(data.values.ingress.domain)
      type: LoadBalancer

accelerator: 
  domain: #@ "{}".format(data.values.ingress.domain)                         
  ingress:
    include: true
  tls:
    secretName: #@ data.values.ingress.contour_tls_secret                                                 
    namespace: #@ data.values.ingress.contour_tls_namespace
  server:
    service_type: ClusterIP

appliveview:
  ingressEnabled: true
  ingressDomain: #@ data.values.ingress.domain

excluded_packages:
  - learningcenter.tanzu.vmware.com
  - workshops.learningcenter.tanzu.vmware.com
